{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sLAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCVlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACrB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAI9Ca,QAAQC,IAAIR,GAbO,kBAeZA,GAfY,4CAAH,sDCEPS,EAAc,SAAC,GAAqB,EAApBN,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKgB,UAAU,yCAAf,UACI,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCDHS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAmBtC,OAbAC,qBAAU,WAEN1B,EAAQC,GAAU0B,MAAK,SAAAC,GACnBC,YAAY,WACRJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAEd,UAGR,CAACtB,IAEGuB,EDZwBM,CAAa7B,GAAhCa,EAJuB,EAI5BN,KAAae,EAJe,EAIfA,QAEpB,OACI,qCACI,6BAAKtB,IAEHsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,mDAAf,SAEQL,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEYA,GADCA,EAAIC,aElB5BmB,EAAe,WAAM,MAGM5C,mBAAS,CAAC,cAHhB,mBAGvB6C,EAHuB,KAGX9C,EAHW,KAW9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,6BAEQ8C,EAAWtB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,YCjBjCgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.5d3fb3eb.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes  from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        //console.log(e.target.value);\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSumibt = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSumibt}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=pojyz9dL5nNdFiqUE51yGiOlKooSJLo2`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url \r\n            }\r\n    });\r\n\r\n    console.log(gifs);\r\n   \r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import React, {useState, useEffect} from 'react'\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            \r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid card animate__animated animate__fadeIn\">\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                                key={img.id}\r\n                                {...img }\r\n                            />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true  \r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs(category).then(imgs => {\r\n            setTimeout( () => {    \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            }, 3000);\r\n        });\r\n\r\n    }, [category]);\r\n\r\n    return state; \r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    //const handleAdd = () => {\r\n        //setCategories([...categories, 'HunterXHunter']); agregando de ultimo en el array\r\n        //setCategories(['HunterXHunter', ...categories]); agregando de primero en el array\r\n        //setCategories(cats => [...cats, 'HunterXHunter']);\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n            \r\n            <ol>\r\n                { \r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={category} \r\n                            category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}